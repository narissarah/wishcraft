# WishCraft Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# SHOPIFY APP CONFIGURATION (Required)
# =============================================================================

# Your Shopify App API Key (from Partners Dashboard)
SHOPIFY_API_KEY=your_shopify_api_key_here

# Your Shopify App API Secret (from Partners Dashboard) 
SHOPIFY_API_SECRET=your_shopify_api_secret_here

# Webhook secret for HMAC verification (from Partners Dashboard)
SHOPIFY_WEBHOOK_SECRET=your_webhook_secret_here

# Your app's public URL (Vercel will provide this)
SHOPIFY_APP_URL=https://your-app.vercel.app

# =============================================================================
# DATABASE CONFIGURATION (Required)
# =============================================================================

# Vercel Postgres Database URLs (from Vercel Storage tab)
POSTGRES_URL=postgresql://username:password@hostname:port/database_name
POSTGRES_PRISMA_URL=postgresql://username:password@hostname:port/database_name
POSTGRES_URL_NON_POOLING=postgresql://username:password@hostname:port/database_name
POSTGRES_USER=username
POSTGRES_HOST=hostname  
POSTGRES_PASSWORD=password
POSTGRES_DATABASE=database_name

# Legacy DATABASE_URL (optional - for backward compatibility)
DATABASE_URL=postgresql://username:password@hostname:port/database_name

# Database connection settings (optional)
# DATABASE_CONNECTION_LIMIT=20
# DATABASE_POOL_TIMEOUT=30
# DATABASE_STATEMENT_TIMEOUT=30000

# =============================================================================
# SECURITY & ENCRYPTION (Required - Generate Unique Values!)
# =============================================================================

# Session secret for cookie encryption (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))")
SESSION_SECRET=generate_unique_32_char_base64_string

# Main encryption key for PII data (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))")
ENCRYPTION_KEY=generate_unique_32_char_base64_string

# Encryption salt for key derivation (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))")
ENCRYPTION_SALT=generate_unique_32_char_hex_string

# Additional encryption key for customer data (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))")
DATA_ENCRYPTION_KEY=generate_unique_32_char_base64_string

# Additional encryption salt (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))")  
DATA_ENCRYPTION_SALT=generate_unique_32_char_hex_string

# Search hash key for anonymizing email searches (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))")
SEARCH_HASH_KEY=generate_unique_32_char_base64_string

# Collaboration token secret for invite tokens (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))")
COLLABORATION_TOKEN_SECRET=generate_unique_32_char_base64_string

# =============================================================================
# ENVIRONMENT CONFIGURATION (Required)
# =============================================================================

# Environment mode (production for Vercel)
NODE_ENV=production

# Suppress Node.js warnings in production
NODE_NO_WARNINGS=1

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Google Analytics Measurement ID (optional)
# GA_MEASUREMENT_ID=G-XXXXXXXXXX

# Logging level (optional, defaults to 'info')
# LOG_LEVEL=info

# Redis URL for caching (optional, falls back to in-memory)
# REDIS_URL=redis://username:password@hostname:port

# =============================================================================
# DEVELOPMENT ONLY (Do not set in production)
# =============================================================================

# For local development only - do not use in production
# SHOPIFY_APP_URL=https://localhost:3000

# =============================================================================
# SECRET GENERATION COMMANDS
# =============================================================================

# Run this command to generate all required secrets at once:
# node -e "
#   const crypto = require('crypto');
#   console.log('# Copy these generated secrets to your Vercel environment variables:');
#   console.log('SESSION_SECRET=' + crypto.randomBytes(32).toString('base64'));
#   console.log('ENCRYPTION_KEY=' + crypto.randomBytes(32).toString('base64')); 
#   console.log('ENCRYPTION_SALT=' + crypto.randomBytes(32).toString('hex'));
#   console.log('DATA_ENCRYPTION_KEY=' + crypto.randomBytes(32).toString('base64'));
#   console.log('DATA_ENCRYPTION_SALT=' + crypto.randomBytes(32).toString('hex'));
#   console.log('SEARCH_HASH_KEY=' + crypto.randomBytes(32).toString('base64'));
#   console.log('COLLABORATION_TOKEN_SECRET=' + crypto.randomBytes(32).toString('base64'));
# "

# =============================================================================
# VERCEL DEPLOYMENT NOTES
# =============================================================================

# 1. Create a new Vercel project
# 2. Add a PostgreSQL service with connection pooling
# 3. Add all the above environment variables to your Vercel project
# 4. Deploy using: vercel --prod
# 5. Update SHOPIFY_APP_URL with your Vercel domain
# 6. Register webhooks in Shopify Partners Dashboard

# =============================================================================
# SHOPIFY 2025-07 COMPLIANCE VERIFIED
# =============================================================================

# This configuration ensures compliance with:
# ✅ Shopify API version 2025-07
# ✅ Built for Shopify 2025 requirements  
# ✅ GDPR compliance (all 3 mandatory webhooks)
# ✅ Core Web Vitals monitoring (CLS, INP, LCP)
# ✅ Enhanced security headers and CSP
# ✅ Proper session token handling

# =============================================================================
# SECURITY CHECKLIST
# =============================================================================

# ✅ All secrets are environment variables (never hardcoded)
# ✅ Unique encryption keys for different purposes
# ✅ Database URL uses secure connection
# ✅ HTTPS enforced in production (via SHOPIFY_APP_URL)
# ✅ Session cookies are httpOnly and secure
# ✅ HMAC webhook verification enabled
# ✅ Rate limiting configured